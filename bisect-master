#!/usr/bin/env sh

# Left commit
badCommit=$1
# Right commit
goodCommit=$2

echo '
Searching for the `master` branch based commits.
'

git bisect start "$badCommit" "$goodCommit"

echo '

Skipping the commits inside PRs...
'

totalCommitsNum=$(git rev-list --count "$goodCommit".."$badCommit")

prCommits=$(for commit in $(git rev-list "$goodCommit".."$badCommit" --merges --first-parent); do
  git rev-list "$commit"^2 --not "$commit"^
done)

prCommitsNum=$(echo "$prCommits" | wc -l)

phaseCommitsNum=$(( ("$totalCommitsNum" / 2) - "$prCommitsNum" ))

phaseSteps=$(echo "sqrt($phaseCommitsNum) + 1" | bc)

echo "$prCommits" | xargs git bisect skip

echo "

Skipped $prCommitsNum commits inside PRs.
"

echo '
+====

1. Finish Phase 1 with the classical:

    ```sh
    git bisect run <test-command>
    # OR
    git bisect bad/good
    ```
    Phase 1 results in particular PR / `master` branch commit.

2. Phase 2:

    ```sh
    bisect-pr <commit>
    ```

'
